#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ФормированиеТестовыхДанных_ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(БанковскийСчет.ВалютаДенежныхСредств) Тогда
		ВалютаСчета = БанковскийСчет.ВалютаДенежныхСредств;
	Иначе
		ВалютаСчета = ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
	КонецЕсли;
	
	ПравоДоступаРедактированиеБанковскогоСчета = ПравоДоступа("Редактирование", Метаданные.Справочники.БанковскиеСчета);
	ПравоДоступаРедактированиеОрганизация = ПравоДоступа("Редактирование", Метаданные.Справочники.Организации);
	Элементы.ВалютаСчета.Доступность = ПравоДоступаРедактированиеБанковскогоСчета И ПравоДоступаРедактированиеОрганизация;
	
	Если ЗначениеЗаполнено(БанковскийСчет.Банк) Тогда
		РеквизитыБанка = БанковскиеСчетаВызовСервера.ПолучитьРеквизитыБанкаИзСправочника(БанковскийСчет.Банк);
		РедактироватьВалютуСчета = РеквизитыБанка.ЯвляетсяБанкомРФ;
	Иначе
		РедактироватьВалютуСчета = Ложь;
	КонецЕсли;
	
	Если НЕ Объект.Ссылка.Пустая() Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.ИНН) И НЕ Объект.ОбособленноеПодразделение Тогда
		ЗаполнитьИдентификационныеКоды();
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(БанковскийСчет.НомерСчета) Тогда
		ЗаполнитьСлучайнымиРеквизитамиРасчетногоСчетаНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ФормированиеТестовыхДанных_ПриОткрытииПосле(Отказ)
	
	Элементы.ВалютаСчета.Видимость = РедактироватьВалютуСчета;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ФормированиеТестовыхДанных_БанкПриИзменении(Элемент)
	
	ЗаполнитьСлучайнымиРеквизитамиРасчетногоСчета();
	
КонецПроцедуры

&НаКлиенте
Процедура ФормированиеТестовыхДанных_БанкОчистка(Элемент, СтандартнаяОбработка)
	
	БанковскийСчет.Банк = Неопределено;
	БанковскийСчет.НомерСчета = Неопределено;
	БИКБанка = "";
	
	БанковскиеСчетаФормыКлиент.УстановитьВалютуПодсказкуСчета(
		БанковскийСчет, ЭтаФорма, БИКБанка, ЦветВыделенияНекорректногоЗначение, Истина);
	
	БанковскиеСчетаФормыКлиентСервер.УстановитьЗаголовокГруппыРеквизитовСчета(ЭтотОбъект, БанковскийСчет);
	ПодсказкаБанк = БанковскиеСчетаФормыКлиентСервер.ПодсказкаПоляБанка(ДеятельностьБанкаПрекращена);
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ФормированиеТестовыхДанных_ВалютаСчетаПриИзменении(Элемент)
	
	ЗаполнитьСлучайнымиРеквизитамиРасчетногоСчета();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ЗаполнитьСлучайнымиРеквизитамиРасчетногоСчета()
	
	ЗаполнитьСлучайнымиРеквизитамиРасчетногоСчетаНаСервере();
	ОтобразитьРеквизитыРасчетногоСчета();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтобразитьРеквизитыРасчетногоСчета()
	
	БанковскиеСчетаФормыКлиент.УстановитьВалютуПодсказкуСчета(
		БанковскийСчет, ЭтаФорма, БИКБанка, ЦветВыделенияНекорректногоЗначение, Истина);
	
	БанковскиеСчетаФормыКлиентСервер.УстановитьЗаголовокГруппыРеквизитовСчета(ЭтотОбъект, БанковскийСчет);
	ПодсказкаБанк = БанковскиеСчетаФормыКлиентСервер.ПодсказкаПоляБанка(ДеятельностьБанкаПрекращена);
	
	Элементы.ВалютаСчета.Видимость = РедактироватьВалютуСчета;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьИдентификационныеКоды()
	
	ИдентификационныеКоды = ФормированиеТестовыхДанных.СлучайныеРеквизитыИдентификации(
		Объект.ЮридическоеФизическоеЛицо);
		
	ЗаполнитьЗначенияСвойств(Объект, ИдентификационныеКоды);
	КодНалоговогоОрганаПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСлучайнымиРеквизитамиРасчетногоСчетаНаСервере()
	
	Если ЗначениеЗаполнено(БанковскийСчет.Банк) И НЕ ЗначениеЗаполнено(БИКБанка) Тогда
		РедактироватьВалютуСчета = Ложь;
		Возврат;
	КонецЕсли;
	
	СтруктураРасчетногоСчета = ФормированиеТестовыхДанных.СлучайныеРеквизитыРасчетногоСчета(
		БИКБанка,
		ВалютаСчета,
		Объект.ЮридическоеФизическоеЛицо);
		
	Если СтруктураРасчетногоСчета = Неопределено ИЛИ НЕ ЗначениеЗаполнено(СтруктураРасчетногоСчета.НомерСчета) Тогда
		РедактироватьВалютуСчета = Ложь;
		Возврат;
	КонецЕсли;
	
	РедактироватьВалютуСчета = СтруктураРасчетногоСчета.ЯвляетсяБанкомРФ;
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, СтруктураРасчетногоСчета);
	ЗаполнитьЗначенияСвойств(БанковскийСчет, СтруктураРасчетногоСчета);
	
КонецПроцедуры

#КонецОбласти